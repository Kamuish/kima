sudo: false
language: generic
dist: trusty

matrix:
  include:
    # - os: linux
    #   env: PYTHON_VERSION=2.7
    # - os: linux
    #   env: PYTHON_VERSION=3.4
    - os: linux
      env: PYTHON_VERSION=3.5
    - os: linux
      env: PYTHON_VERSION=3.6
    - os: linux
      env: PYTHON_VERSION=3.7
    # - os: osx
    #   env: PYTHON_VERSION=2.7
    - os: osx
      env: PYTHON_VERSION=3.6
  allow_failures:
    - os: osx

install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  # setup miniconda
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      wget http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O ~/miniconda.sh;
    else
      wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh;
    fi
  - bash ~/miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - python --version
  - pip --version
  - conda create -q -n test python=$PYTHON_VERSION
  - source activate test
  - conda install nomkl numpy scipy matplotlib pytest pytest-cov
  - pip install corner coveralls

  # compile the C++
  - make
  # and now the pykima package
  - python setup.py install

script:
  # test pykima installation
  - python -c "import pykima"
  - cd; python -c "import pykima"; cd -
  - kima-showresults -h
  - kima-checkpriors -h
  - cd; kima-template; cd -
  - cd examples/51Peg; timeout 20s ./kima -t 2 -s 42; cd -
  # run tests
  - py.test -v --cov=pykima tests


after_success: coveralls


notifications:
  email:
    on_success: never
    on_failure: change
